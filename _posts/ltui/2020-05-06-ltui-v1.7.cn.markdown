---
layout: post.cn
title:  "LTUI v1.7 发布, 一个基于lua的跨平台字符终端UI界面库"
tags: ltui curses lua xmake ui
categories: ltui 
---


LTUI是一个基于lua的跨平台字符终端UI界面库。 

此框架源于[xmake](https://github.com/xmake-io/xmake)中图形化菜单配置的需求，类似linux kernel的menuconf去配置编译参数，因此基于curses和lua实现了一整套跨平台的字符终端ui库。
而样式风格基本上完全参照的kconfig-frontends，当然用户也可以自己定制不同的ui风格。

另外，LTUI是完全跨平台的，windows上的terminal终端也是完全支持的，在windows上ltui会采用pdcurses来进行窗口绘制。

* [Github](https://github.com/tboox/ltui)

### 更新内容

然而之前的版本，并不支持布局随终端窗口的大小调整，来自动调整布局，如果窗口变大，那边整个视图还是会保留原有的大小。
而在当前v1.7版本中，我进行了局部重构，来支持窗口Resize，以及所有views布局的自适应调整。

之前的版本：

<img src="https://tboox.org/static/img/ltui/unresized.png" width="70%" />

新版本的效果：

<img src="https://tboox.org/static/img/ltui/choicebox.png" width="70%" />

### 安装使用

```console
$ luarocks install ltui
```

如果要运行自带的测试，你需要先安装[lua](https://www.lua.org/)或者[luajit](http://luajit.org/)程序去加载运行ltui源码仓库中的测试程序：

```console
$ lua tests/dialog.lua
$ lua tests/window.lua
$ lua tests/desktop.lua
$ lua tests/inputdialog.lua
$ lua tests/mconfdialog.lua
```

或者

```console
$ luajit tests/dialog.lua
$ luajit tests/window.lua
$ luajit tests/desktop.lua
$ luajit tests/inputdialog.lua
$ luajit tests/mconfdialog.lua
```

### 源码编译

通常只要luarocks安装好后就可以使用，如果想要本地调试，也可以源码编译后直接运行测试，首先我们需要先安装跨平台构建工具：[xmake](https://github.com/xmake-io/xmake)

```console
$ xmake
```

xmake会自动下载lua, ncurses等相关依赖，然后我们直接通过`xmake run`加载相关测试程序即可：

```console
$ xmake run test dialog
$ xmake run test window
$ xmake run test desktop
$ xmake run test inputdialog
$ xmake run test mconfdialog
```


### 应用程序

```lua
local ltui        = require("ltui")
local application = ltui.application
local event       = ltui.event
local rect        = ltui.rect
local window      = ltui.window
local demo        = application()

function demo:init()
    application.init(self, "demo")
    self:background_set("blue")
    self:insert(window:new("window.main", rect {1, 1, self:width() - 1, self:height() - 1}, "main window", true))
end

demo:run()
```

### 标签 

```lua
local lab = label:new("title", rect {0, 0, 12, 1}, "hello ltui!"):textattr_set("white")
```

### 按钮 

```lua
local btn = button:new("yes", rect {0, 1, 7, 2}, "< Yes >"):textattr_set("white")
```

### 输入框

```lua
function demo:init()
    -- ...

    local dialog_input = inputdialog:new("dialog.input", rect {0, 0, 50, 8})
    dialog_input:text():text_set("please input text:")
    dialog_input:button_add("no", "< No >", function (v) dialog_input:quit() end)
    dialog_input:button_add("yes", "< Yes >", function (v) dialog_input:quit() end)
    self:insert(dialog_input, {centerx = true, centery = true})
end
```

### 组件

| 视图      | 对话框       | 其他        |
| -------   | ------       | ------      |
| view      | dialog       | event       |
| panel     | boxdialog    | action      |
| label     | textdialog   | canvas      |
| button    | inputdialog  | curses      |
| border    | mconfdialog  | program     |
| window    | choicedialog | application |
| menubar   |              | point       |
| menuconf  |              | rect        |
| textedit  |              | object      |
| textarea  |              |             |
| statusbar |              |             |
| choicebox |              |             |
| desktop   |              |             |


### 菜单配置

<img src="https://tboox.org/static/img/ltui/menuconf.png" width="70%" />

### 输入框

<img src="https://tboox.org/static/img/ltui/inputdialog.png" width="70%" />

### 文本区域

<img src="https://tboox.org/static/img/ltui/textarea.png" width="70%" />

### Windows平台

<img src="https://tboox.org/static/img/ltui/windows.png" width="70%" />

